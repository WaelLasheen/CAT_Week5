/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode* step1=head;   //will increase by 1
        ListNode* step2=head;   //will increase by 2
        //so with every move step1 will be in middle as step2 moving
        while(step2 !=NULL && step2->next !=NULL){
            step2 = step2->next->next;
            step1 = step1->next;
        }
        return step1;
    }
};
